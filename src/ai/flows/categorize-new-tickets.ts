// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview An AI agent that categorizes new tickets based on their text content.
 *
 * - categorizeTicket - A function that categorizes a ticket.
 * - CategorizeTicketInput - The input type for the categorizeTicket function.
 * - CategorizeTicketOutput - The return type for the categorizeTicket function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CategorizeTicketInputSchema = z.object({
  ticketText: z
    .string()
    .describe('The text content of the ticket.'),
});
export type CategorizeTicketInput = z.infer<typeof CategorizeTicketInputSchema>;

const CategorizeTicketOutputSchema = z.object({
  category: z
    .enum(['Support', 'Hosting', 'Urgent', 'Other'])
    .describe('The predicted category for the ticket.'),
});
export type CategorizeTicketOutput = z.infer<typeof CategorizeTicketOutputSchema>;

export async function categorizeTicket(input: CategorizeTicketInput): Promise<CategorizeTicketOutput> {
  return categorizeTicketFlow(input);
}

const prompt = ai.definePrompt({
  name: 'categorizeTicketPrompt',
  input: {schema: CategorizeTicketInputSchema},
  output: {schema: CategorizeTicketOutputSchema},
  prompt: `You are an expert ticket categorization agent.

  Given the text of a ticket, predict the most appropriate category for the ticket.
  The possible categories are: Support, Hosting, Urgent, Other.

  Return ONLY the name of the category.

  Ticket text: {{{ticketText}}}`,
});

const categorizeTicketFlow = ai.defineFlow(
  {
    name: 'categorizeTicketFlow',
    inputSchema: CategorizeTicketInputSchema,
    outputSchema: CategorizeTicketOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
